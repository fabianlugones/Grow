<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEntrada.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAN8AAADfAQ+tYY4AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADOklEQVRYR8WXy08TURTGm/hoNT5QExCjLly4MRI0cWMiKxM1cWPCwgVr3flPyNIYExZlYUKMbkxw
        6StKFE2UhQQVqFKKoAhSC4XO3OnMdFqP58yrd2Zu4bbGQvKjOWdmzvfNfU8MAGSJFzTjkqLq/WuqPlxQ
        9TSiuqQpR9foHro39GxNhEkeTdPaUSCJKAhIQvcm6VlRTR5h0iWBRXoRzS3aCPRsL9UK1fYRJhljBwtM
        HwkVaxysRTVFWpEEY+ZJ7Mt5YaF/gGpS7bBeICCXSj67wFK3QX91DvSh01IU31wANj0ABYUJxT0cE8GW
        4A0kqKm08ZtgPG5rCPXboFA4AGqQlqfrG8CLNOBAf9EhLC5D8f1VsWgUGphVA+5Us0e78fSIsLgM1BWc
        yHqgpDNFvbeneW5fbJIBIukZiGPgLzJNNKCQdoyWTv5CEw0Aacfs9ZtLNtMAacfcjcVPShl40grm8F4o
        fUhAaTRe5WMLmFOdQozMeWBLD1CjulaQNg1A2tU4A0fFohzm2z1gjW9pCMeEr5cmA7Sd+sniu26hKI81
        tl1YXAZqCU5PjRhQ51+C8fy4UNjD+rRVWFwG6g5OzzYQ6AKbwiqos4+gONLji1LLsMx9G2til7C4DCED
        6cggDLC2AvrrLtxwzkBhdcnPlyb3OQUnd0NlpR8qy31oaidYqQNQyd/F+A7GcYxbMR6ASu4W3r8tYsAe
        hOFpGEb5nQLl12gg5xkoz/fgWuL8lb93Q+XnNTfCeO4yVBZvuBHGM10RA/Y0DC9EMvgt8PUYgLUAUPoB
        1pfDUE6fwDgLf8xZfPs2KE93onIO4wy2lvNMoAtoIUJzgaVYBt8AMZFAuFkxsQN/neZ2YuwaLuYMOEsx
        /gtsRjKUJvdXBerEnDrl1fE3o8B2LIORuSgsLoM+d51qBLdjtxXsA4kMLPcMW6FFKLAepVQ7qPkxqhE8
        kLjYR7KwWE2UZdCW7oExc8UXMNNnQVvsE8KyD/EZpfaRjLAPpfWeiJU89msHvt0hUNbmxPe4UO31DqU2
        jRzL1fxnUHNDwmsejvgGx3IPcllXd2wE1gq/uUckwbF5n2Y87hTdlI/TMP/h8xxifwEtPT36cyBFGwAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="btnEnviarMensajes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAB2AAAAdgAUeEWlIAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAACtUlEQVRYR8XWW4hNURzH8T2XmEsjxiUe3IomkaQMD5KZUsowUeOSyYtBSpmah1GaCUmZJ5KkEEoi
        RC4PPIiUy8ilpFweEFFyJwkd39/prNNqzX8NBtu/PrXPb/3Xnj377L3WSTKZzH9lhmkywzSZYZrM8F+h
        ClGNtbiAm2bj30QNxzIcxisodLaak/4EVYE52IZ7+IyzWIfzeIct+IDB5kl+B1WEyWjDRXzBLXRgBkow
        E49wEkOxFx3Z+eEJfwU1AstxBK/xDDrpYgzy+gbiAF5gQS6rwhsMyH52zd2h+qAe23EfH3EGzRgbmbME
        L7Eb/bz8IDbmP7sDH6XbOgXtuATd1k5sQg16WfOEGgl957rQmmBsHHTH+uYzb1ATV+AodIseYxfmo7/r
        i6F00S14C11oidFzDG1BlqzHQ7zHCaxCld/0M9QEXMdVjI/0TIS+koogT1bjLvRf78Ns9PabYqhSbIbm
        6jyFVp9Qp9DaJc8fJMkY6FW6Db2renrnotSf4PXXQnfuNIZZPQ6l50lvQlmXsTDIhkkyGmug26oF4xAa
        UI5K7IFOuNCaH6LOodkcs0IfpXdeD9dlfIKWU11ApdUfoqbhKbo8lNlxK4yh9IDqoMkat1BaHVdaY2KG
        MdQGXIEeulFWj4/SUqwlOL5uWGEMtR+t0Mair6TI6nMoXexSa8wxwxhKe7gWpmLo5O1Wn1B1eIBia9wx
        wxhKq+Ok3LEWlq+oNvoKcAON4VjIDC2U/utv0A6nNV17vf6I1vzyoHcetLhFFybHDC2UXkftgo3Qet+S
        y49jp9enn1130OCy7pihhZqO79DeP9XLdUeeoy73eRG0mha4nu6YoYXShqPdLP+DwxubBa2MQ6Cvpj7s
        iTHDnqB24Ak6rfEYM+wJqgzXUGuNx5hhmswwTWaYJjNMTyb5AXWXl620Mnb8AAAAAElFTkSuQmCC
</value>
  </data>
</root>